# This file represents the base specification of your challenge. It is used by
# other tools to install and deploy your challenge.

# Required sections
name: "crypto 2"
#author: "author"
category: cryptography
description: |
  I heard from an inside source that my previous cipher was broken - something about being "a trivial substitution encoding", whatever that means. I think this one will stump them - even if they break it, they haven't broken it!


  The encrypted value is:

  ```
  010100000100100000110101010010100100111101101100011100000111100001010010010001010100010100110011010101110011000001100100010101010101000101010111011010000110000101001001001100000011010101000001010101100110101001000001011101010100110101101010010001010111001101010010010101010101010101101001010100010101011100110101010001100110001001111010010001010111101001001010011011010100001001100101010010110111101001000110011010100101001101010100001100000110111001001101010001110011000101101011010101010100010101000110010001000110000101000100011110000010101101010000011001110011110100111101
  ```
value: 150
type: standard

# The extra field provides additional fields for data during the install/sync commands/
# Fields in extra can be used to supply additional information for other challenge types
# For example the follow extra field is for dynamic challenges. To use these following
# extra fields, set the type to "dynamic" and uncomment the "extra" section below
# extra:
#     initial: 500
#     decay: 100
#     minimum: 50

# Settings used for Dockerfile deployment
# If not used, remove or set to null
# If you have a Dockerfile set to .
# If you have an imaged hosted on Docker set to the image url (e.g. python/3.8:latest, registry.gitlab.com/python/3.8:latest)
# Follow Docker best practices and assign a tag
image: null
# Specify a host to deploy the challenge onto.
# The currently supported URI schemes are ssh:// and registry://
# ssh is an ssh URI where the above image will be copied to and deployed (e.g. ssh://root@123.123.123.123)
# registry is a Docker registry tag (e.g registry://registry.example.com/test/image)
# host can also be specified during the deploy process: `ctf challenge deploy challenge --host=ssh://root@123.123.123.123`
host: null

# Optional settings

# connection_info is used to provide a link, hostname, or instructions on how to connect to a challenge
#connection_info: nc hostname 12345

# healthcheck is a tool/script used to check a challenge
# If connection_info was provided to CTFd when the challenge was installed, it will be passed to the healthcheck script:
# ./writeup/exploit.sh --connection-info "nc hostname 12345"
#healthcheck: writeup/exploit.sh

# Can be removed if unused
#attempts: 5

# Flags specify answers that your challenge use. You should generally provide at least one.
# Can be removed if unused
# Accepts strings or dictionaries of CTFd API data
flags:
  # A static case sensitive flag
  - flag{1d674e578c5ff8c329dfbc30f90ed1de}
  # # A static case sensitive flag created with a dictionary
  # - {
  #     type: "static",
  #     content: "flag{wat}",
  # }
  # # A static case insensitive flag
  # - {
  #     type: "static",
  #     content: "flag{wat}",
  #     data: "case_insensitive",
  # }
  # # A regex case insensitive flag
  # - {
  #     type: "regex",
  #     content: "(.*)STUFF(.*)",
  #     data: "case_insensitive",
  # }

# Topics are used to help tell what techniques/information a challenge involves
# They are generally only visible to admins
# Accepts strings
topics:
  - encoding

# Tags are used to provide additional public tagging to a challenge
# Can be removed if unused
# Accepts strings
#tags: []

# Provide paths to files from the same directory that this file is in
# Accepts strings
# files:
#   - dist/source.py

# Hints are used to give players a way to buy or have suggestions. They are not
# required but can be nice.
# Can be removed if unused
# Accepts dictionaries or strings
# hints:
#   - {
#     content: "This hint costs points",
#     cost: 10
#     }
#   - This hint is free

# Requirements are used to make a challenge require another challenge to be
# solved before being available.
# Can be removed if unused
# Accepts challenge names as strings or challenge IDs as integers
requirements:
  - "crypto 1"
#   - "Are you alive"

# The state of the challenge.
# If the field is omitted, the challenge is visible by default.
# If provided, the field can take one of two values: hidden, visible.
#state: hidden

# Specifies what version of the challenge specification was used.
# Subject to change until ctfcli v1.0.0
version: "0.1"
